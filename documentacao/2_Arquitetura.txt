A arquitetura da plataforma digital que suporta NutriBox foi projetada usando o modelo em camadas (Layered Architecture). Esse modelo separa a aplicação em responsabilidades bem definidas, simplificando manutenção, testes e evolução. As camadas principais são: apresentação, aplicação, domínio e infraestrutura.

A camada de apresentação engloba o site e o aplicativo mobile, responsáveis pela interface com o cliente. Nessa camada o usuário visualiza cardápios, monta pedidos, gerencia assinaturas, atualiza seu perfil e visualiza histórico de entregas. A comunicação desta camada com o restante do sistema ocorre por meio de chamadas a uma API RESTful ou GraphQL que expõe os serviços do back-end.

A camada de aplicação concentra os serviços que coordenam fluxos de negócio: autenticação, orquestração de pedidos, processamento de assinaturas, cálculo de preços e integração com gateways de pagamento e serviços de entrega. Essa camada valida requisições vindas da apresentação, aplica regras de negócio registradas no domínio e delega operações de persistência para a camada de infraestrutura através de interfaces bem definidas.

A camada de domínio contém as regras de negócio puras: cálculo de porções, aplicação de suplementos a determinadas refeições, regras de elegibilidade para promoções, lógica de renovação de assinaturas e políticas de reembolso. Nesta camada recomenda-se evitar dependências diretas de frameworks, mantendo a lógica testável e independente de infraestrutura.

A camada de infraestrutura inclui o banco de dados (sugestão: PostgreSQL para dados relacionais de pedidos, usuários e assinaturas), repositórios que implementam acesso a dados, integrações com gateways de pagamento (por exemplo Mercado Pago, Stripe), provedores de envio/logística e serviços de monitoramento e logging. O acesso ao banco é encapsulado por interfaces (padrão repository) para reduzir acoplamento.

Fluxo conceitual de dados: o usuário realiza uma ação na interface; a interface chama a API no back-end; os serviços de aplicação validam entradas, consultam o domínio e solicitam gravações/leituras aos repositórios; os repositórios executam operações na base de dados; as integrações externas são chamadas pela camada de infraestrutura quando necessário (pagamentos, cálculo de frete). Observabilidade é composta por logs estruturados, métricas de performance e alertas configurados em uma ferramenta de monitoramento.

Quanto a segurança, recomenda-se autenticação via tokens JWT com expiração curta e refresh tokens para renovação, armazenamento seguro de segredos em variáveis de ambiente ou serviços de gerenciamento de segredos, criptografia de senhas com algoritmo forte (bcrypt ou scrypt), validação rigorosa de entradas para evitar injeção de SQL e outras falhas, comunicação sobre HTTPS e controle de permissões por papel/escopo no back-end. Para escalabilidade, componentes da camada de aplicação podem ser containerizados e escalados independentemente, enquanto o banco de dados pode ser particionado ou utilizado com réplicas de leitura conforme a necessidade.
